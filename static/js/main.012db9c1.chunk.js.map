{"version":3,"sources":["components/patientCard.js","components/displayCard.js","App.js","reportWebVitals.js","index.js"],"names":["timeline","patientArr","PatientCard","returnPatientData","returnTimeLineData","useState","patientData","setPatientData","timeLineData","setTimeLineData","handleOnChange","target","data","name","value","addItem","genId","Date","getTime","timeData","id","class","style","height","className","onChange","type","paddingTop","paddingBottom","required","onClick","push","sort","a","b","datetime","ShowTimeline","header","items","cbDelete","date","toLocaleDateString","data-date","map","item","index","color","slice","detail","e","document","getElementById","background","border","DisplayCard","onDelete","dateFormat","uniqueSumDate","filter","v","i","s","indexOf","filtered","arr","forEach","time","length","handleDelete","padding","pop","gender","age","fontSize","fontWeight","career","Object","keys","App","inputData","setInputData","storePatientInfo","setStorePatientInfo","storeTimeLineInfo","setTimeLineInfo","key","div","tempArray","splice","findIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.012db9c1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nlet timeline = [];\r\nlet patientArr = [];\r\nfunction PatientCard({ returnPatientData, returnTimeLineData }) {\r\n\r\n    const [patientData, setPatientData] = useState({});\r\n    const [timeLineData, setTimeLineData] = useState([]);\r\n\r\n    function handleOnChange({ target }) {\r\n        const data = patientData;\r\n        setPatientData({ ...data, [target.name]: target.value });\r\n\r\n    }\r\n\r\n    function addItem({ target }) {\r\n        let genId = new Date().getTime();\r\n        const timeData = timeLineData;\r\n        setTimeLineData({ ...timeData, id: genId, [target.name]: target.value });\r\n\r\n    }\r\n\r\n    function subMitData() {\r\n        patientArr.push(patientData)\r\n        timeline.push(timeLineData);\r\n        timeline.sort((a, b) => (a.datetime > b.datetime) ? 1 : ((b.datetime > a.datetime) ? -1 : 0))\r\n        returnPatientData('patient', patientArr);\r\n        returnTimeLineData('timeline', timeline);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div class=\"col-12\">\r\n\r\n                <div class=\"row input_container\">\r\n                    <div class=\"col-12\" style={{ height: \"3rem\" }}>\r\n                        <label className=\"patient_header\">ข้อมูลผู้ป่วย</label></div>\r\n\r\n                    <div class=\"col-sm-6 justify-content-center\" >\r\n                        <label>เพศ</label>\r\n                        <select name=\"gender\" onChange={handleOnChange} class=\"gender_option\">\r\n                            <option value=\"\"></option>\r\n                            <option value=\"ชาย\">ชาย</option>\r\n                            <option value=\"หญิง\">หญิง</option>\r\n                        </select></div>\r\n                    <div class=\"col-sm-6 justify-content-center\">\r\n                        <label>\r\n                            อายุ</label>\r\n                        <input\r\n                            name=\"age\"\r\n                            type=\"number\"\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </div>\r\n                    <div class=\"col-12\" style={{\r\n                        paddingTop: \"3%\",\r\n                        paddingBottom: \"9%\"\r\n                    }}>\r\n                        <label>อาชีพ</label>\r\n                        <input\r\n                            name=\"career\"\r\n                            type=\"text\"\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-12\" style={{ paddingTop: \"7%\" }}>\r\n\r\n                <div class=\"row input_container\">\r\n                    <div class=\"col-12\" style={{ height: \"3rem\" }}>\r\n                        <label className=\"patient_header\">ข้อมูลไทม์ไลน์</label></div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <label >\r\n                            วันเวลา\r\n                            </label>\r\n                        <input\r\n                            name=\"datetime\"\r\n                            type=\"datetime-local\"\r\n                            onChange={addItem}\r\n                            required=\"true\"\r\n                        />\r\n\r\n                    </div>\r\n                    <div class=\"col-12\" style={{ paddingTop: \"4%\" }}>\r\n                        <label>\r\n                            รายละเอียด\r\n                            </label>\r\n                        <input\r\n                            class=\"input_detailed\"\r\n                            name=\"detail\"\r\n                            onChange={addItem}\r\n                            required=\"true\"\r\n                        />\r\n\r\n                    </div>\r\n                    <div class=\"col-12\" style={{ paddingTop: \"4%\", paddingBottom: \"4%\" }}>\r\n                        <button class=\"adding_button\" onClick={subMitData}>+ เพิ่มข้อมูล</button></div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default PatientCard;","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../App.css'\r\nfunction DisplayCard({ patientData, timeLineData, onDelete }) {\r\n\r\n    function dateFormat(timeLineData) {\r\n        return timeLineData && timeLineData.slice(0, 10);\r\n    }\r\n\r\n    const uniqueSumDate = timeLineData && timeLineData\r\n        .map((item) => dateFormat(item.datetime))\r\n        .filter((v, i, s) => s.indexOf(v) === i);\r\n\r\n    let filtered = {}\r\n\r\n    for (let i = 0; i < uniqueSumDate.length; i++) {\r\n        const arr = [];\r\n        timeLineData.forEach((time, index) => {\r\n            if (dateFormat(time.datetime) == uniqueSumDate[i]) {\r\n                arr.push(time)\r\n                filtered[dateFormat(time.datetime)] = arr;\r\n            }\r\n        })\r\n    }\r\n    const handleDelete = (id) => {\r\n        onDelete(id);\r\n    };\r\n    return (\r\n        <div class=\"app_container\">\r\n            <h1 class=\"text-center\" style={{ color: \"rgb(255, 193, 7)\", padding: \"4% 0px 1% 0px\" }}>Timeline</h1>\r\n            <div class=\"dis_patient_con\">\r\n                <h4 class=\"text-center\">ผู้ป่วย{patientData[0] && [...patientData].pop().gender} อายุ {patientData[0] && [...patientData].pop().age} ปี</h4>\r\n                <p style={{fontSize: \"14px\", fontWeight: \"bold\" }} class=\"text-center\">อาชีพ {patientData[0] && [...patientData].pop().career}</p>\r\n            </div>\r\n            {\r\n                Object.keys(filtered).map((date, i) => {\r\n                    return (\r\n                        <ShowTimeline key={i} header={date} items={filtered[date]} cbDelete={handleDelete} data={filtered} />\r\n                    );\r\n                })\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nfunction ShowTimeline({ header, items, cbDelete, data }) {\r\n\r\n\r\n    function onDelete(id) {\r\n        cbDelete(id);\r\n        const delLi = document.getElementById(id);\r\n        delLi.className = 'fade-out-right';\r\n        \r\n\r\n    }\r\n    const date = new Date(header).toLocaleDateString();\r\n    return (\r\n        <div>\r\n            <ul class=\"timeline\">\r\n                <li class=\"event fade-in\" data-date={date}>\r\n                    <li class=\"fade-in\">\r\n                        {items &&\r\n                            items.map((item, index) => {\r\n                                return (\r\n                                    <li class=\"fade-in detailed_cointainer right\" id={item.id} key={index} >\r\n                                        <div><label style={{color: \"rgb(255, 193, 7)\"}}>{item.datetime.slice(11, 16)}</label> {item.detail}</div>  <button onClick={(e) => onDelete(item.id)} style={{background:\"transparent\",border:\"none\",color:\"white\"}}>x</button>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                    </li>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DisplayCard;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './App.css';\r\nimport PatientCard from './components/patientCard';\r\nimport DisplayCard from './components/displayCard';\r\nfunction App() {\r\n  const [inputData, setInputData] = useState();\r\n  const [storePatientInfo, setStorePatientInfo] = useState({});\r\n  const [storeTimeLineInfo, setTimeLineInfo] = useState([]);\r\n\r\n\r\n  function getPatientData(key, value) {\r\n    const data = inputData;\r\n    setInputData({ ...data });\r\n    setStorePatientInfo(value);\r\n  }\r\n\r\n  function getTimeLinetData(key, value) {\r\n    const data = inputData;\r\n    setInputData({ ...data });\r\n    setTimeLineInfo(value);\r\n  }\r\n\r\n\r\n  const callbackDelete = (id) => {\r\n    const tempArray = storeTimeLineInfo;\r\n    tempArray.splice(\r\n      tempArray.findIndex((v) => v.id === id),\r\n      1\r\n    );\r\n    setTimeLineInfo(tempArray);\r\n  };\r\n\r\n  return (\r\n      <div class=\"container-fluid app_container\">\r\n        <label class=\"topic\">COVID Timeline Generator</label>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-5\">\r\n            <PatientCard returnPatientData={getPatientData} returnTimeLineData={getTimeLinetData} />\r\n\r\n          </div>\r\n          <div div class=\"col-sm-7 app_container\" style={{ border: \"1px solid #ffc107\"}}>\r\n            <DisplayCard patientData={storePatientInfo} timeLineData={storeTimeLineInfo} onDelete={callbackDelete} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}